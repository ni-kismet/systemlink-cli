[tool.poetry]
name = "slcli"
version = "0.11.2"
description = "SystemLink Integrator CLI - cross-platform CLI for SystemLink workflows and templates."
authors = ["Fred Visser <fred.visser@emerson.com>"]


[tool.poetry.scripts]
slcli = "slcli.__main__:cli"
build-pyinstaller = "scripts.build_pyinstaller:main"
update-version = "scripts.update_version:main"
lint = "scripts.lint:main"

[tool.poetry.dependencies]
python = ">=3.11.1,<3.14"
# cli
click = ">=7.1.2"
keyring = "^25.6.0"
requests = "^2.32.4"
tabulate = "^0.9.0"
truststore = ">=0.9,<0.11"



[tool.poetry.group.dev.dependencies]
# Lint
ni-python-styleguide = ">=0.4.3"
cyclonedx-bom = "^5.0.0"

# Type checking
mypy = ">=1.0"

# Test
pytest = ">=7.0"
pytest-cov = ">=3.0"
pytest-timeout = ">=2.1.0"
pyinstaller = "^6.14.2"

# Semantic Release
python-semantic-release = "^9.0.0"

[tool.pytest.ini_options]
addopts = "--cov slcli --strict-markers --doctest-modules"
markers = [
    "e2e: marks tests as end-to-end tests",
    "slow: marks tests as slow running",
    "notebook: marks tests as notebook-related",
    "dff: marks tests as dynamic form fields related", 
    "workspace: marks tests as workspace-related",
    "user: marks tests as user management related"
]

[tool.black]
line-length = 100

[tool.mypy]
python_version = "3.13"
files = "**/*.py"
disallow_untyped_defs = true
warn_unused_configs = true
namespace_packages = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unreachable = true

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = ["slcli/_version.py:__version__"]
build_command = "python scripts/update_version.py"
major_on_zero = false
branch = "main"
upload_to_pypi = false
upload_to_release = true
hvcs = "github"
commit_message = "chore(release): {version}"
tag_format = "v{version}"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.changelog]
template_dir = "templates"
exclude_commit_patterns = []

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
